[gd_scene load_steps=9 format=2]

[ext_resource path="res://ASSETS/SOUND/FX/SCREEN_SHUT_DOWN/Screen_shut_down.wav" type="AudioStream" id=1]
[ext_resource path="res://ASSETS/GRAPHICS/SCREEN_SHUTDOWN/Screen_shut_down.png" type="Texture" id=2]
[ext_resource path="res://ASSETS/SOUND/FX/SCREEN_SHUT_DOWN/White_noise.wav" type="AudioStream" id=3]
[ext_resource path="res://SCENES/OVERLAYS/Shutdown_Overlay.gd" type="Script" id=4]
[ext_resource path="res://SHADERS/Noise.gdshader" type="Shader" id=5]

[sub_resource type="ShaderMaterial" id=4]
shader = ExtResource( 5 )
shader_param/amount = 0.0

[sub_resource type="Animation" id=1]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 0,
"values": [  ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../White_noise:volume_db")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 5.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../ColorRect:material:shader_param/amount")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../ColorRect:self_modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.5 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:self_modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.501961 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("../ColorRect:material:render_priority")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0 ]
}

[sub_resource type="Animation" id=2]
resource_name = "Screen_Shut_Down"
length = 1.4
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
}
tracks/1/type = "audio"
tracks/1/path = NodePath("../Screen_shut_down")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 1 )
} ],
"times": PoolRealArray( 0 )
}
tracks/2/type = "audio"
tracks/2/path = NodePath("../White_noise")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 3 )
} ],
"times": PoolRealArray( 0 )
}
tracks/3/type = "value"
tracks/3/path = NodePath("../White_noise:volume_db")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 5.0 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath(".:self_modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.501961 ), Color( 1, 1, 1, 1 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../ColorRect:material:shader_param/amount")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.25, 0.75, 0.0, 0.25, 10.0 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("../ColorRect:self_modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.5 ), Color( 1, 1, 1, 0.1 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.5 ), Color( 1, 1, 1, 0.00784314 ) ]
}

[node name="Shutdown_Overlay" type="CanvasLayer"]
script = ExtResource( 4 )

[node name="Sprite" type="Sprite" parent="."]
self_modulate = Color( 1, 1, 1, 0.501961 )
position = Vector2( 240, 135 )
texture = ExtResource( 2 )
hframes = 13
frame = 12

[node name="ColorRect" type="ColorRect" parent="."]
self_modulate = Color( 1, 1, 1, 0.5 )
material = SubResource( 4 )
margin_right = 480.0
margin_bottom = 270.0
color = Color( 0, 0, 0, 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../Sprite")
anims/RESET = SubResource( 1 )
anims/Screen_Shut_Down = SubResource( 2 )

[node name="Screen_shut_down" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 1 )
volume_db = 15.0
bus = "FX"

[node name="White_noise" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 3 )
volume_db = 5.0
bus = "FX"

[connection signal="animation_started" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_started"]
